# Generated by Django 5.2.2 on 2025-06-17 17:17

import django.core.validators
import django.db.models.deletion
import resources.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'resource category',
                'verbose_name_plural': 'resource categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('resource_type', models.CharField(choices=[('note', 'Lecture Note'), ('assignment', 'Assignment'), ('book', 'Book/Textbook'), ('exam', 'Exam Paper'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(help_text='Only PDF files are allowed', upload_to=resources.models.resource_file_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), resources.models.validate_pdf_file])),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='resource_thumbnails/')),
                ('file_size', models.PositiveIntegerField(editable=False)),
                ('license_type', models.CharField(choices=[('public', 'Public Domain'), ('cc-by', 'CC BY'), ('cc-by-sa', 'CC BY-SA'), ('cc-by-nc', 'CC BY-NC'), ('copyright', 'All Rights Reserved')], default='cc-by', max_length=20)),
                ('is_free', models.BooleanField(default=True)),
                ('allow_download', models.BooleanField(default=True)),
                ('allow_comments', models.BooleanField(default=True)),
                ('course_code', models.CharField(blank=True, max_length=20)),
                ('course_name', models.CharField(blank=True, max_length=100)),
                ('institution', models.CharField(blank=True, max_length=100)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('downloads', models.PositiveIntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_resources', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to='resources.resourcecategory')),
            ],
            options={
                'verbose_name': 'resource',
                'verbose_name_plural': 'resources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='resources.resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'resource comment',
                'verbose_name_plural': 'resource comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_history', to='resources.resource')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'resource download',
                'verbose_name_plural': 'resource downloads',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '★☆☆☆☆ - Poor'), (2, '★★☆☆☆ - Fair'), (3, '★★★☆☆ - Good'), (4, '★★★★☆ - Very Good'), (5, '★★★★★ - Excellent')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='resources.resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'resource rating',
                'verbose_name_plural': 'resource ratings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['slug'], name='resources_r_slug_1bd26a_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['resource_type'], name='resources_r_resourc_1a6f3f_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['course_code'], name='resources_r_course__253e8b_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['is_approved'], name='resources_r_is_appr_dda797_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='resourcerating',
            unique_together={('resource', 'user')},
        ),
    ]
